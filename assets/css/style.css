/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/* ul */
/* xl */
/* lg */
/* md */
/* sm */
/* xs */
.page-footer__container, .team__container, .services__container, .publicatios__container, .experiense__contanier, .cases__contanier, .page-header__grid {
  max-width: 1360px;
  margin-right: auto;
  margin-left: auto;
  padding-right: 20px;
  padding-left: 20px;
}

.services__title, .slider__item.active {
  background: linear-gradient(90deg, #ef8080 35%, #f0145a 100%);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  text-fill-color: transparent;
}

.modal__title, .representation__descriptin, .publicatios__title {
  background: linear-gradient(90deg, #f0145a 1%, #ef8080 50%);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  text-fill-color: transparent;
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-family: "TT Norms", sans-serif;
  font-size: 16px;
}

body {
  transition: transform 0.25s;
  line-height: 0.8;
}
body.active {
  overflow: hidden;
  transform: translateX(-170px);
}

a {
  text-decoration: none;
  color: #ffffff;
}

@font-face {
  font-family: "TT Norms";
  src: url(../fonts/TTNorms-Bold.woff2) format("woff2");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "TT Norms";
  src: url(../fonts/TTNorms-Regular.woff2) format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "TT Norms";
  src: url(../fonts/TTNorms-Medium.woff2) format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
.actions {
  display: flex;
  gap: 20px;
  justify-content: flex-end;
  align-items: center;
}
.actions__languages {
  font-weight: 700;
  font-size: 12px;
  letter-spacing: 1px;
  display: flex;
  gap: 2px;
}
.actions__language-link {
  display: block;
  padding: 6px 6px 5px 7px;
  border-radius: 8px;
}
.actions__language-link.active {
  background-color: #f0145a;
}
.actions__locations::before {
  content: "";
  display: inline-block;
  width: 6px;
  height: 6px;
  border-radius: 3px;
  background-color: #e6e6f0;
  margin-right: 10px;
  margin-bottom: 2px;
}
.actions__phone-link {
  font-weight: 700;
  white-space: nowrap;
}
.actions__phone-link::before {
  content: "";
  display: inline-block;
  width: 6px;
  height: 6px;
  border-radius: 3px;
  background-color: #e6e6f0;
  margin-right: 10px;
  margin-bottom: 2px;
}
.actions__socials::before {
  content: "";
  display: inline-block;
  width: 6px;
  height: 6px;
  border-radius: 3px;
  background-color: #e6e6f0;
  margin-right: 10px;
  margin-bottom: 6px;
}

.page-header {
  background: linear-gradient(42deg, #323264 15%, #323264 50%, #7a425e 88%);
}
.page-header::after {
  content: "";
  position: absolute;
  top: 70%;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1;
  background: linear-gradient(to top, #323264 0%, transparent 100%);
}
.page-header__grid {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  display: grid;
  grid-template-columns: auto 1fr;
  gap: 20px;
  padding-top: 50px;
  z-index: 2;
}
.page-header__logo {
  grid-area: logo;
}
.page-header__menu {
  grid-area: menu;
}
.page-header__actions {
  grid-area: act;
}
.page-header__content {
  position: relative;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: flex-end;
  overflow: hidden;
  z-index: 1;
}
.page-header__content-image {
  padding-bottom: 20px;
}
.page-header__content-title {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  max-width: 620px;
  margin: 0;
  padding: 20px;
  transform: translate(-50%, -50%);
  text-align: center;
  color: #ffffff;
  font-size: 38px;
  font-weight: 500;
  line-height: 45px;
}
.page-header__button {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  bottom: 20px;
  z-index: 2;
  cursor: pointer;
}

.menu {
  align-self: center;
  font-style: 18px;
}
.menu__btn {
  position: relative;
  width: 40px;
  height: 30px;
  margin-left: auto;
  cursor: pointer;
}
.menu__btn-row {
  position: absolute;
  left: 0;
  display: block;
  width: 100%;
  height: 5px;
  transition: 0.25s ease-in-out;
  transform: rotate(0deg);
  opacity: 1;
  border-radius: 5px;
  background-color: #ffffff;
}
.menu__btn-row:nth-of-type(1) {
  top: 0;
}
.menu__btn-row:nth-of-type(2) {
  top: 12px;
}
.menu__btn-row:nth-of-type(3) {
  top: 24px;
}
.menu__btn.active span:nth-of-type(1) {
  top: 12px;
  transform: rotate(135deg);
}
.menu__btn.active span:nth-of-type(2) {
  left: -40px;
  opacity: 0;
}
.menu__btn.active span:nth-of-type(3) {
  top: 12px;
  transform: rotate(-135deg);
}
.menu__list {
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
  gap: 15px;
  justify-content: flex-end;
}

.cases__rows {
  display: flex;
  flex-direction: column;
  border-radius: 12px;
  overflow: hidden;
}
.cases__row-top {
  display: grid;
  gap: 2px;
  grid-template-columns: repeat(3, 1fr);
}
.cases__row-bottom {
  display: grid;
  gap: 2px;
  border-top: 2px solid #ffffff;
  grid-template-columns: 25% 35% 1fr;
}

.content {
  display: flex;
  flex-direction: column;
  background-color: #f5f5fa;
}
.content__title {
  font-size: 14px;
  line-height: 17px;
  letter-spacing: 1px;
  text-transform: uppercase;
  color: #f0145a;
  padding: 20px;
  border-bottom: 2px solid #ffffff;
}
.content-item {
  background-color: #f5f5fa;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  padding: 25px;
  gap: 20px;
}
.content-item__description {
  font-size: 24px;
  line-height: 28px;
  color: #686887;
  font-weight: 500;
}
.content__link {
  font-size: 18px;
  color: #b3b3ba;
}

.cases-item {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  padding: 20px;
  background-color: #f5f5fa;
  gap: 20px;
}
.cases-item__description {
  font-size: 24px;
  line-height: 28px;
  color: #686887;
  font-weight: 500;
}
.cases-item__link {
  font-size: 18px;
  color: #b3b3ba;
}

.clients__title {
  text-align: center;
  font-size: 14px;
  letter-spacing: 1px;
  text-transform: uppercase;
  color: #323264;
  padding: 30px 10px;
}
.clients__list {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
}
.clients-item__logo {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.wrapper {
  background: linear-gradient(190deg, #323264 12%, #323264 57%, #643e72 87%);
  border-radius: 0 0 12px 12px;
}

.experiense {
  background-color: #323264;
}
.slider {
  display: flex;
  color: #ffffff;
}
.slider__headers {
  position: relative;
  flex-grow: 2;
  flex-basis: 0;
  display: flex;
  flex-direction: column;
  gap: 20px;
  margin: 0;
}
.slider__item {
  color: #b3b3ba;
  font-weight: 700;
  user-select: none;
  position: relative;
}
.slider__notes {
  flex-grow: 3;
  flex-basis: 0;
  display: flex;
  align-items: center;
  color: #ffffff;
}
.slider__note {
  position: absolute;
  z-index: -9999;
  opacity: 0;
}
.slider__note.active {
  position: static;
  z-index: inherit;
  opacity: 1;
}
.slider__title {
  gap: 20px;
  margin-bottom: 20px;
}
.slider__description {
  line-height: 143%;
  font-size: 21px;
  padding-right: 150px;
}
.slider__indicators {
  display: flex;
  justify-content: center;
  gap: 14px;
}
.slider__indicator {
  width: 16px;
  height: 16px;
  opacity: 0.2;
  border-radius: 8px;
  background-color: #24a3ff;
}
.slider__indicator.active {
  opacity: 1;
}

.publicatios {
  background-color: #f5f5fa;
  padding-top: 40px;
  padding-bottom: 100px;
  position: relative;
}
.publicatios__page-link {
  font-size: 14px;
  letter-spacing: 1px;
  text-transform: uppercase;
  color: #24a3ff;
}
.publicatios__title {
  font-size: 42px;
  padding-top: 10px;
}
.publicatios__news {
  padding-top: 40px;
  gap: 40px;
}
.publicatios__btn {
  background-color: #24a3ff;
  cursor: pointer;
  border: none;
  border-radius: 12px;
  min-width: 250px;
  min-height: 50px;
  padding: 3px;
  color: #ffffff;
  font-weight: 700;
  text-align: center;
  box-shadow: 0px 0px 20px rgba(36, 163, 255, 0.5);
  position: absolute;
  left: 50%;
  bottom: 40px;
  z-index: 2;
  transform: translateX(-50%);
}

.news-content {
  background-color: #ffffff;
  margin-bottom: 40px;
  border-radius: 8px;
}
.news-content__image {
  width: 100%;
}
.news-content__title {
  font-weight: 400;
  font-size: 18px;
  line-height: 21px;
  padding: 20px 20px 10px 20px;
  color: #24a3ff;
}
.news-content__data {
  position: relative;
  font-weight: 700;
  font-size: 12px;
  letter-spacing: 1px;
  text-transform: uppercase;
  color: #e6e6f0;
  padding-bottom: 20px;
  margin-right: 20px;
  margin-left: 20px;
}
.news-content__description {
  padding: 20px;
  line-height: 138%;
  padding-top: 20px;
}

.service-item {
  display: grid;
  align-items: center;
  gap: 10px;
  grid-template-rows: auto auto 1fr;
}
.service-item__title {
  color: #24a3ff;
  font-weight: 500;
}
.service-item__descriptin {
  color: #ffffff;
  line-height: 1.44;
}

.services {
  position: relative;
  border-radius: 0 0 12px 12px;
  background: linear-gradient(190deg, #323264 12%, #323264 57%, #643e72 87%);
}
.services::before {
  content: "";
  position: absolute;
  top: 100%;
  right: 20px;
  left: 20px;
  height: 20px;
  border-radius: 0 0 12px 12px;
  background-color: #e6e6f0;
}
.services::after {
  content: "";
  position: absolute;
  top: 100%;
  right: 10px;
  left: 10px;
  height: 10px;
  border-radius: 0 0 12px 12px;
  background-color: #b3b3ba;
}
.services__page-link {
  letter-spacing: 1px;
  text-transform: uppercase;
  color: rgba(255, 255, 255, 0.5);
  font-size: 14px;
}
.services__page-img {
  margin-left: 3px;
}
.services__grid {
  display: grid;
  gap: 40px;
}
.services__title {
  padding-top: 10px;
}

.representation {
  grid-area: rep;
  padding-top: 40px;
  padding-right: 9px;
}
.representation__link {
  color: #24a3ff;
  font-size: 14px;
  line-height: 17px;
  letter-spacing: 1px;
  text-transform: uppercase;
  padding-bottom: 10px;
}
.representation__img {
  margin-left: 5px;
}
.representation__descriptin {
  font-weight: 700;
  font-size: 42px;
  line-height: 50px;
  padding-bottom: 20px;
}
.representation-partner {
  padding-top: 5px;
  padding-bottom: 10px;
  grid-area: ptr;
  display: flex;
  gap: 10px;
  align-items: center;
}
.representation-partner__photo {
  border-radius: 25px;
}

.team {
  padding-top: 60px;
  padding-bottom: 60px;
}
.team-item {
  background-color: #f5f5fa;
  border-radius: 12px 12px 12px 12px;
  display: grid;
  padding-left: 20px;
  margin-bottom: 20px;
}
.team-item__photo {
  grid-area: photo;
}
.team-item__indicators {
  display: flex;
  justify-content: center;
  gap: 14px;
}
.team-item__indicator {
  width: 16px;
  height: 16px;
  opacity: 0.2;
  border-radius: 8px;
  background-color: #24a3ff;
}
.team-item__indicator.active {
  opacity: 1;
}
.team-item-person {
  display: flex;
  flex-direction: column;
}
.team-item-person__name {
  font-size: 18px;
  line-height: 21px;
  color: #b3b3ba;
}
.team-item-person__position {
  font-size: 16px;
  color: #b3b3ba;
}

.page-footer {
  background-color: #f5f5fa;
  padding-bottom: 40px;
}
.footer__nav {
  display: grid;
  row-gap: 30px;
  grid-template-areas: "loc copy" "con copy";
  padding-top: 35px;
  border-top: 4px solid #e6e6f0;
}
.footer__nav-copyright {
  grid-area: copy;
  display: flex;
  justify-content: flex-end;
  color: #b3b3ba;
  line-height: 19px;
}

.footer__location {
  grid-area: loc;
  display: flex;
  align-items: center;
  gap: 45px;
}
.footer__location-address {
  font-weight: 500;
  white-space: nowrap;
  color: #686887;
}
.footer__location-link {
  font-weight: 700;
  font-size: 12px;
  letter-spacing: 1px;
  text-transform: uppercase;
  color: #24a3ff;
}

.footer__connect {
  grid-area: con;
  display: flex;
  align-items: center;
  gap: 20px;
}
.footer__connect-phone {
  font-weight: 700;
  color: #46466e;
}
.footer__connect-email {
  font-weight: 700;
  color: #24a3ff;
}

.modal {
  background-color: #f5f5fa;
}
.modal__title {
  font-size: 32px;
  line-height: 38px;
}
.form {
  width: 100%;
  padding: 20px;
  overflow: hidden;
}
.form-item {
  display: block;
  width: 100%;
  border-radius: 8px;
}
@media (min-width: 576px) {
  .service-item__title {
    font-size: 24px;
    line-height: 26px;
  }
  .service-item__descriptin {
    font-size: 18px;
  }
  .services__title {
    margin-bottom: 60px;
    font-size: 42px;
  }
  .team-item-person__name {
    padding-bottom: 10px;
  }
}
@media (min-width: 768px) {
  .page-header::before {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-image: url(../img/background-header.png);
    background-repeat: no-repeat;
    background-position: 50% 100%;
    background-size: 85vh;
  }
  .page-header__grid {
    grid-template-areas: "logo act" "logo menu";
  }
  .menu__btn {
    display: none;
  }
  .publicatios {
    max-height: 872px;
    overflow: hidden;
  }
  .publicatios::after {
    content: "";
    display: block;
    position: absolute;
    height: 160px;
    width: 100%;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    background: linear-gradient(180deg, rgba(245, 245, 250, 0) 0%, #f5f5fa 86.5%);
  }
  .news-content__data {
    border-bottom: 4px solid #e6e6f0;
  }
  .service-item__image {
    width: 92px;
    height: 92px;
  }
  .services__title {
    width: max-content;
  }
}
@media (min-width: 992px) {
  .content-item {
    min-height: 200px;
  }
  .experiense {
    padding-top: 80px;
    padding-bottom: 80px;
  }
  .slider {
    gap: 80px;
  }
  .slider__headers::after {
    content: "";
    position: absolute;
    width: 4px;
    height: 100%;
    right: -42px;
    background-color: #e6e6f0;
  }
  .slider__item {
    text-align: right;
    font-size: 42px;
  }
  .slider__item.active::after {
    content: "";
    position: absolute;
    width: 4px;
    height: 100%;
    right: -42px;
    background-color: #f0145a;
    z-index: 2;
  }
  .slider__title {
    font-size: 32px;
    padding-right: 40px;
  }
  .slider__indicator {
    display: none;
  }
  .publicatios__news {
    columns: 3 auto;
  }
  .services {
    padding-bottom: 100px;
  }
  .representation-partner__photo {
    display: none;
  }
  .team-item {
    grid-template-areas: "photo rep" "photo ptr";
    gap: 40px;
  }
}
@media (min-width: 1280px) {
  .services__grid {
    grid-template-columns: repeat(3, 1fr);
  }
}
@media (max-width: 1279.8px) {
  .service-item {
    grid-template-columns: auto 1fr;
  }
  .service-item__descriptin {
    grid-column: 1/span 3;
  }
}
@media (max-width: 1279.8px) and (min-width: 768px) {
  .services__grid {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media (max-width: 991.8px) {
  .actions__locations::before {
    display: none;
  }
  .actions__phone-link::before {
    display: none;
  }
  .actions__socials::before {
    display: none;
  }
  .cases__row-top {
    align-items: center;
    justify-content: center;
    text-align: center;
    grid-template-columns: repeat(2, 1fr);
  }
  .cases__row-bottom {
    align-items: center;
    justify-content: center;
    text-align: center;
    grid-template-columns: repeat(2, 1fr);
  }
  .content {
    grid-column-end: 3;
    grid-column-start: 1;
  }
  .cases-item {
    grid-column-end: 3;
    grid-column-start: 1;
  }
  .clients__list {
    grid-template-columns: repeat(3, 1fr);
  }
  .experiense {
    padding-top: 40px;
    padding-bottom: 40px;
  }
  .slider {
    flex-direction: column;
  }
  .slider__item {
    display: none;
    font-size: 14px;
    letter-spacing: 1px;
    text-transform: uppercase;
    width: min-content;
    white-space: nowrap;
    margin-bottom: 10px;
  }
  .slider__item.active {
    display: block;
  }
  .slider__title {
    font-size: 22px;
    margin-bottom: 15px;
    padding-right: 10px;
  }
  .slider__description {
    font-size: 18px;
    padding-right: 10px;
    margin-bottom: 20px;
  }
  .publicatios__title {
    font-size: 32px;
  }
  .team-item {
    grid-template-areas: "rep rep" "photo photo" "ptr ptr";
    gap: 20px;
  }
  .team-item__image {
    display: none;
  }
  .page-footer {
    padding-bottom: 115px;
  }
  .footer__nav {
    grid-template-areas: "loc" "con" "copy";
    row-gap: 20px;
    padding-top: 25px;
  }
  .footer__nav-copyright {
    justify-content: center;
    text-align: center;
  }
  .footer__location {
    flex-direction: column;
    gap: 10px;
  }
  .footer__connect {
    flex-direction: column;
  }
}
@media (max-width: 991.8px) and (min-width: 576px) {
  .services {
    padding-bottom: 50px;
  }
}
@media (max-width: 991.8px) and (min-width: 768px) {
  .publicatios__news {
    columns: 2 auto;
  }
}
@media (max-width: 767.8px) {
  .actions {
    justify-content: space-between;
  }
  .actions a {
    color: #b3b3ba;
  }
  .actions__language-link.active {
    color: #ffffff;
  }
  .actions__locations {
    display: none;
  }
  .actions__socials {
    display: none;
  }
  .page-header__grid {
    grid-template-areas: "act act" "logo menu";
    padding-top: 20px;
  }
  .menu__list {
    display: none;
  }
  .clients__list {
    grid-template-columns: repeat(2, 1fr);
  }
  .publicatios {
    padding-top: 20px;
  }
  .publicatios__news {
    padding-top: 20px;
    columns: 1 auto;
    gap: 20px;
  }
  .publicatios__btn {
    bottom: 40px;
  }
  .news-content__description {
    display: none;
  }
  .content-invisible {
    display: none;
  }
  .service-item__image {
    width: 65px;
    height: 65px;
  }
  .service-item__descriptin {
    line-height: 22px;
  }
}
@media (max-width: 575.8px) {
  .cases__row-top {
    text-align: left;
  }
  .cases__row-bottom {
    text-align: left;
  }
  .content-item {
    padding: 20px;
  }
  .content-item__description {
    font-size: 18px;
    line-height: 21px;
  }
  .cases-item__description {
    font-size: 18px;
    line-height: 21px;
  }
  .service-item__title {
    font-size: 18px;
    line-height: 21px;
  }
  .services {
    padding-bottom: 20px;
  }
  .services__title {
    margin-bottom: 40px;
    font-size: 32px;
  }
  .representation__descriptin {
    font-size: 30px;
    line-height: 32px;
  }
  .team {
    padding-top: 40px;
  }
  .team-item {
    grid-template-areas: "rep rep" "photo ptr";
    gap: 5px;
  }
  .team-item-person__name {
    font-size: 11px;
  }
  .team-item-person__position {
    font-size: 10px;
  }
}
@media (max-width: 400px) {
  .page-header__logo-image {
    width: 100px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */